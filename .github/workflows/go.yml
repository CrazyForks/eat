name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up environment
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          GOOS=linux
        elif [ "${{ matrix.os }}" == "windows-latest" ]; then
          GOOS=windows
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          GOOS=darwin
        fi
        GOARCH=${{ matrix.arch }}
        echo "GOOS=$GOOS" >> $GITHUB_ENV
        echo "GOARCH=$GOARCH" >> $GITHUB_ENV

    - name: Build
      run: go build -v -o myapp-${{ env.GOOS }}-${{ env.GOARCH }} ./...

    - name: Test
      run: go test -v ./...

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: myapp-${{ env.GOOS }}-${{ env.GOARCH }}
        path: myapp-${{ env.GOOS }}-${{ env.GOARCH }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts
        asset_name: myapp-${{ env.GOOS }}-${{ env.GOARCH }}
        asset_content_type: application/octet-stream
